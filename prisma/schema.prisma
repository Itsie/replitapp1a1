datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

generator client {
  provider = "prisma-client-js"
}

enum OrderSource {
  JTL
  INTERNAL
}

enum Department {
  TEAMSPORT
  TEXTILVEREDELUNG
  STICKEREI
  DRUCK
  SONSTIGES
}

enum WorkflowState {
  ENTWURF
  NEU
  PRUEFUNG
  FUER_PROD
  IN_PROD
  WARTET_FEHLTEILE
  FERTIG
  ZUR_ABRECHNUNG
  ABGERECHNET
}

enum QCState {
  IO
  NIO
  UNGEPRUEFT
}

enum JTLRowType {
  NORMAL
  BUNDLE_PARENT
  BUNDLE_CHILD
  SHIPPING
  CREDIT
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String
  role      String
  password  String
  createdAt DateTime @default(now())
}

model WorkCenter {
  id          String     @id @default(cuid())
  name        String
  department  Department
  capacityMin Int        @default(660)
  active      Boolean    @default(true)
  timeSlots   TimeSlot[]
}

model Order {
  id                  String             @id @default(cuid())
  extId               String?            @unique
  displayOrderNumber  String?            @unique
  source              OrderSource
  department          Department
  title               String
  customer            String
  dueDate             DateTime?
  notes               String?
  workflow            WorkflowState      @default(NEU)
  qc                  QCState            @default(UNGEPRUEFT)
  location            String?
  company             String?
  contactFirstName    String?
  contactLastName     String?
  customerEmail       String?
  customerPhone       String?
  billStreet          String?
  billZip             String?
  billCity            String?
  billCountry         String?            @default("DE")
  shipStreet          String?
  shipZip             String?
  shipCity            String?
  shipCountry         String?
  totalNet            Decimal?
  totalVat            Decimal?
  totalGross          Decimal?
  sizeTableId         String?
  sizeTable           SizeTable?         @relation(fields: [sizeTableId], references: [id])
  printAssets         PrintAsset[]
  positions           OrderPosition[]
  timeSlots           TimeSlot[]
  invoiceQueueItem    InvoiceQueueItem?
  createdAt           DateTime           @default(now())
  updatedAt           DateTime           @updatedAt
}

model OrderPosition {
  id            String   @id @default(cuid())
  orderId       String
  order         Order    @relation(fields: [orderId], references: [id], onDelete: Cascade)
  articleName   String
  articleNumber String?
  qty           Decimal
  unit          String   @default("Stk")
  unitPriceNet  Decimal
  vatRate       Int      @default(19)
  lineNet       Decimal
  lineVat       Decimal
  lineGross     Decimal
  procurement   String   @default("NONE")
  supplierNote  String?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model SizeTable {
  id        String   @id @default(cuid())
  scheme    String
  rows      Json
  comment   String?
  createdAt DateTime @default(now())
  Order     Order[]
}

model PrintAsset {
  id        String   @id @default(cuid())
  orderId   String
  order     Order    @relation(fields: [orderId], references: [id])
  label     String
  url       String
  required  Boolean  @default(true)
  createdAt DateTime @default(now())
}

model TimeSlot {
  id           String      @id @default(cuid())
  date         DateTime
  startMin     Int
  lengthMin    Int
  workCenterId String
  workCenter   WorkCenter  @relation(fields: [workCenterId], references: [id])
  orderId      String?
  order        Order?      @relation(fields: [orderId], references: [id])
  blocked      Boolean     @default(false)
  note         String?
}

model JTLOrderPosition {
  id              String     @id @default(cuid())
  jtlOrderNumber  String
  articleNumber   String?
  description     String
  quantity        Float      @default(0)
  unitPriceGross  Float      @default(0)
  unitPriceNet    Float?
  taxRate         Float?
  discountAbs     Float?
  discountPct     Float?
  rowType         JTLRowType @default(NORMAL)
  parentKey       String?
  variation       String?
  isShipping      Boolean    @default(false)
  isCredit        Boolean    @default(false)
  raw             Json
}

model InvoiceQueueItem {
  id        String   @id @default(cuid())
  orderId   String   @unique
  order     Order    @relation(fields: [orderId], references: [id])
  status    String
  comment   String?
  createdAt DateTime @default(now())
}

model OrderSequence {
  id      Int @id @default(autoincrement())
  year    Int @unique
  current Int @default(999)
}
